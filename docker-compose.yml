version: "2"

services:
  #
  # Applications
  nginx-entrypoint:
    image: ${COMPOSE_PROJECT_NAME}_entrypoint:latest
    container_name: ${COMPOSE_PROJECT_NAME}_entrypoint
    restart: unless-stopped
    expose:
      - "80"
    build:
      context: ./proxy
    environment:
      - DHPARAM_GENERATION=false
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${GRAFANA_VHOST}
      - LETSENCRYPT_HOST=${TE_VHOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - https-revproxy
      - grafana
  #
  # Grafana stack
  distributor:
    image: tempo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_distributor
    restart: unless-stopped
    command: "-target=distributor -config.file=/etc/tempo.yaml"
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    expose:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "7946"
    depends_on:
      - minio
    networks:
      - grafana
  # -> 3 ingesters
  ingester-0:
    image: tempo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_ingester_0
    restart: unless-stopped
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    expose:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "7946"
    depends_on:
      - distributor # inverted relationship here to add delay for minio
    networks:
      - grafana

  ingester-1:
    image: tempo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_ingester-1
    restart: unless-stopped
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    expose:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "7946"
    depends_on:
      - distributor # inverted relationship here to add delay for minio
    networks:
      - grafana
  
  ingester-2:
    image: tempo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_ingester_2
    restart: unless-stopped
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    expose:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "7946"
    depends_on:
      - distributor # inverted relationship here to add delay for minio
    networks:
      - grafana

  minio:
    image: minio/minio:latest
    container_name: ${COMPOSE_PROJECT_NAME}_minio
    restart: unless-stopped
    environment:
      - MINIO_ACCESS_KEY=tempo
      - MINIO_SECRET_KEY=supersecret
    expose:
      - "9000"
    entrypoint:
      - sh
      - -euc
      - mkdir -p /data/tempo && /usr/bin/minio server /data
    networks:
      - grafana

  synthetic-load-generator:
    image: omnition/synthetic-load-generator:1.0.25
    container_name: ${COMPOSE_PROJECT_NAME}_loadgenerator
    restart: unless-stopped
    volumes:
      - ./load-generator.json:/etc/load-generator.json
    environment:
      - TOPOLOGY_FILE=/etc/load-generator.json
      - JAEGER_COLLECTOR_URL=http://distributor:14268
    depends_on:
      - distributor
      - ingester-0
      - ingester-1
    networks:
      - grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: ${COMPOSE_PROJECT_NAME}_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    expose:
      - "9090"
    networks:
      - grafana

  loki:
    image: grafana/loki:2.4.0
    container_name: ${COMPOSE_PROJECT_NAME}_loki
    restart: unless-stopped
    expose:
      - "3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - grafana

  promtail:
    image: grafana/promtail:2.4.0
    container_name: ${COMPOSE_PROJECT_NAME}_promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - grafana

  grafana:
    image: grafana/grafana:7.4.2
    container_name: ${COMPOSE_PROJECT_NAME}_grafana
    restart: unless-stopped
    volumes:
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards-provisioning/:/etc/grafana/provisioning/dashboards/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    expose:
      - "3000"
    networks:
      - grafana

  cadvisor:
    image: google/cadvisor:latest
    container_name: ${COMPOSE_PROJECT_NAME}_cadvisor
    restart: unless-stopped
    expose:
    - "8080"
    volumes:
    - /var/lib/docker/:/var/lib/docker:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /sys:/sys:ro
    networks:
      - grafana

volumes:
  te-webapp:

networks:
  https-revproxy:
    external:
      name: ${APPS_NETWORK}
  grafana: